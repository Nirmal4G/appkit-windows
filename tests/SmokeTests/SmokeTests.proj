<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="Current" DefaultTargets="Build">

  <PropertyGroup>
    <BuildPlatforms>x86</BuildPlatforms>
    <BuildConfigurations>Release</BuildConfigurations>
    <ToolkitPackages>
      UWPBaseline;
      UWPBaselineWinUI;
      CommunityToolkit.Windows;
      CommunityToolkit.Windows.Connectivity;
      CommunityToolkit.Windows.DeveloperTools;
      CommunityToolkit.Windows.Input.GazeInteraction;
      CommunityToolkit.Windows.Notifications;
      CommunityToolkit.Windows.UI;
      CommunityToolkit.Windows.UI.Animations;
      CommunityToolkit.Windows.UI.Behaviors;
      CommunityToolkit.Windows.UI.Media;
      CommunityToolkit.Windows.UI.Controls;
      CommunityToolkit.Windows.UI.Controls.Core;
      CommunityToolkit.Windows.UI.Controls.DataGrid;
      CommunityToolkit.Windows.UI.Controls.Layout;
      CommunityToolkit.Windows.UI.Controls.Input;
      CommunityToolkit.Windows.UI.Controls.Markdown;
      CommunityToolkit.Windows.UI.Controls.Media;
      CommunityToolkit.Windows.UI.Controls.Primitives;
    </ToolkitPackages>
  </PropertyGroup>

  <Target Name="GetNuGetVersion">
    <Exec Command="powershell -Command &quot;&amp; { .\&quot;$(ProjectDir)..\build\tools\Nerdbank.GitVersioning\tools\Get-Version.ps1\&quot; | Select -ExpandProperty NuGetPackageVersion }&quot;"
          ConsoleToMSBuild="true"
          EchoOff="true"
          Condition="'$(NuGetPackageVersion)' == ''">
      <Output TaskParameter="ConsoleOutput" PropertyName="NuGetPackageVersion" />
    </Exec>
    <Message Text="Got GitBank Version... $(NuGetPackageVersion)" Importance="High" />
  </Target>

  <Target Name="Build"
          DependsOnTargets="ChooseProjectsToBuild;GetNuGetVersion"
          Inputs="@(ProjectsToBuild)"
          Outputs="%(Filename)">

    <Message Importance="High" Text="Building project %(ProjectsToBuild.Identity): (%(ProjectsToBuild.Configuration)|%(ProjectsToBuild.Platform))" />

    <MSBuild Projects="SmokeTest.csproj"
              Targets="restore;build"
              Properties="CurrentProject=%(ProjectsToBuild.Identity);Configuration=%(ProjectsToBuild.Configuration);Platform=%(ProjectsToBuild.Platform);NuGetPackageVersion=$(NuGetPackageVersion)" />
  </Target>

  <Target Name="ChooseProjectsToBuild" DependsOnTargets="CheckNuGetPackages">
    <ItemGroup>
      <BuildPlatform Include="$(BuildPlatforms)" />
      <BuildConfiguration Include="$(BuildConfigurations)" />
      <ToolkitPackage Include="$(ToolkitPackages)" />

      <ToolkitProject Include="@(ToolkitPackage)">
        <Platforms>x86;x64;ARM;ARM64</Platforms>
        <BinDir>bin</BinDir>
        <AssemblyName>%(ToolkitPackage.Identity)</AssemblyName>
      </ToolkitProject>

      <CandidateProjects Include="@(ToolkitProject);@(AnyCPUProject)">
        <Platform>%(BuildPlatform.Identity)</Platform>
      </CandidateProjects>

      <FilteredProjects Include="@(CandidateProjects)" Condition="$([System.String]::new('%(CandidateProjects.Platforms)').Contains('%(CandidateProjects.Platform)'))" />

      <ProjectsPerConfig Include="@(FilteredProjects)">
        <Configuration>%(BuildConfiguration.Identity)</Configuration>
      </ProjectsPerConfig>

      <ProjectsToBuild Include="@(ProjectsPerConfig)">
        <AdditionalProperties>Platform=%(ProjectsPerConfig.Platform);Configuration=%(ProjectsPerConfig.Configuration)</AdditionalProperties>
      </ProjectsToBuild>
    </ItemGroup>
  </Target>

  <Target Name="CheckNuGetPackages">
    <PropertyGroup>
      <NuGetOutputPath>$(MSBuildThisFileDirectory)..\bin\nupkg</NuGetOutputPath>
    </PropertyGroup>
    <ItemGroup>
      <NuGetPackage Include="$(NuGetOutputPath)\*.nupkg" />
    </ItemGroup>
    <Error Condition="'@(NuGetPackage)' == ''" Text="Directory '$(NuGetOutputPath)' is empty" />
  </Target>

</Project>